{"ast":null,"code":"import _classCallCheck from \"/home/fox/projects/todo-list-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/projects/todo-list-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fox/projects/todo-list-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fox/projects/todo-list-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fox/projects/todo-list-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fox/projects/todo-list-react/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tasks: [{\n        name: \"Task 1\",\n        category: \"to_do\"\n      }, {\n        name: \"Task 2\",\n        category: \"to_do\"\n      }, {\n        name: \"Task 3\",\n        category: \"done\"\n      }],\n      sections: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var sections = {\n        'to_do': {\n          id: 1,\n          name: \"To Do\",\n          list: []\n        },\n        'done': {\n          id: 2,\n          name: \"Done\",\n          list: []\n        }\n      };\n      this.state.tasks.forEach(function (t) {\n        sections[t.category].list.push(React.createElement(\"div\", {\n          key: t.name,\n          onDragStart: function onDragStart(e) {\n            return _this2.onDragStart(e, t);\n          },\n          draggable: true,\n          className: \"draggable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, t.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"task description\")));\n      });\n      this.setState({\n        sections: sections\n      }, function () {\n        console.log(\"this.state\", this.state.sections);\n      });\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(ev) {\n      ev.preventDefault();\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(ev, task) {\n      console.log('dragstart');\n      ev.dataTransfer.setData(\"name\", task.name);\n      ev.dataTransfer.setData(\"category\", task.category);\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(ev, cat) {\n      console.log(\"dropstart\", cat);\n      var name = ev.dataTransfer.getData(\"name\");\n      var category = ev.dataTransfer.getData(\"category\");\n      console.log(\"category\", category);\n      var sections = this.state.sections;\n\n      for (var section in sections) {\n        if (section == category) {\n          var i = 0;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = sections[section].list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var task = _step.value;\n\n              if (task) {\n                if (task.key == name) {\n                  console.log(task);\n                  sections[cat].list.push(task);\n                  delete sections[category].list[i];\n                }\n              }\n\n              i++;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      this.setState({\n        sections: sections\n      });\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var sections = this.state.sections;\n      var sections_list = [];\n\n      var _loop = function _loop(section) {\n        sections_list.push(React.createElement(\"div\", {\n          key: sections[section].id,\n          className: \"section\",\n          onDragOver: function onDragOver(e) {\n            return _this3.onDragOver(e);\n          },\n          onDrop: function onDrop(e) {\n            _this3.onDrop(e, section);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"task-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, sections[section].name), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, sections[section].list)));\n      };\n\n      for (var section in sections) {\n        _loop(section);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-drag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"To do List\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, sections_list));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/fox/projects/todo-list-react/src/App.js"],"names":["React","ReactDOM","App","props","state","tasks","name","category","sections","id","list","forEach","t","push","e","onDragStart","setState","console","log","ev","preventDefault","task","dataTransfer","setData","cat","getData","section","i","key","stopPropagation","sections_list","onDragOver","onDrop","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass App extends React.Component {    \n  \n  constructor(props) {\n      super(props);\n      this.state = {        \n        tasks: [\n          {\n            name:\"Task 1\",\n              category:\"to_do\"\n            },  \n          \n            {\n              name:\"Task 2\", \n              category:\"to_do\"\n          },  \n          \n            {\n              name:\"Task 3\", \n              category:\"done\"\n            }          \n        ],\n        sections: {}        \n    }     \n  }\n\n  componentWillMount(){\n    var sections = {\n        'to_do':{\n          id:1,\n          name:\"To Do\",\n          list:[]\n        },\n        'done':{\n          id:2,\n          name:\"Done\",\n          list:[]\n        },\n      } \n\n    this.state.tasks.forEach((t) => {               \n    sections[t.category].list.push(<div \n      key={t.name}                     \n      onDragStart={(e)=>this.onDragStart(e, t)}                    \n      draggable                    \n      className=\"draggable\">                       \n         <p>{t.name}</p>\n         <p>task description</p>                \n    </div>);       \n    });\n    this.setState({sections: sections}, function () {\n        console.log(\"this.state\", this.state.sections)\n    });\n    \n  }\n\n\n    onDragOver(ev){\n      ev.preventDefault();\n    }\n\n    onDragStart(ev, task){\n      console.log('dragstart')\n      ev.dataTransfer.setData(\"name\",task.name)\n      ev.dataTransfer.setData(\"category\",task.category)\n    }\n\n    onDrop(ev, cat){    \n      console.log(\"dropstart\",cat)\n      let name = ev.dataTransfer.getData(\"name\");\n      let category = ev.dataTransfer.getData(\"category\");\n      console.log(\"category\",category)\n\n      let sections = this.state.sections\n      for(let section in sections){\n        if(section == category){\n          let i = 0\n          for(let task of sections[section].list){\n            if(task){\n              if(task.key == name){\n                console.log(task)\n                sections[cat].list.push(task)\n                delete sections[category].list[i]\n              }\n            }\n            i++\n          }         \n        }\n      }\n      this.setState({sections: sections})   \n      ev.preventDefault();\n      ev.stopPropagation();     \n  }\n\n    render () {\n    let sections = this.state.sections     \n    let sections_list = []\n    for (let section in sections) {\n        sections_list.push(\n        <div key={sections[section].id} className=\"section\" \n          onDragOver={(e)=>this.onDragOver(e)}                    \n          onDrop={(e)=>{this.onDrop(e, section)}}>                    \n          <span className=\"task-header\">{sections[section].name}</span>         \n          <div>                    \n          {sections[section].list}\n          </div>                \n        </div> \n      ); \n    }\n      return (\n        <div className=\"container-drag\">\n        <h2 className=\"header\">To do List</h2>  \n        <div>       \n          {sections_list}\n        </div>          \n      </div>);\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}