{"version":3,"sources":["components/task.js","components/task_edit_name.js","components/section.js","App.js","serviceWorker.js","index.js"],"names":["Task","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","bind","assertThisInitialized","inherits","createClass","key","value","e","task","console","log","taskChangeNameStart","name","_this2","react_default","a","createElement","onDragStart","draggable","className","description","React","Component","Task_Edit_Name","state","handleChange","handleSubmit","event","setState","target","taskChangeName","preventDefault","onSubmit","type","onChange","Section","section","onDragOver","onDrop","list","App","tasks","category","edit","sections","to_do","id","done","new_name","ev","dataTransfer","setData","cat","getData","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","push","index","indexOf","splice","err","return","stopPropagation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","number","keys","length","concat","Count","forEach","t","task_edit_name_Task_Edit_Name","task_Task","sections_list","section_Section","style","width","height","onDropOut","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fce110c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../App.css';\n\nexport class Task extends React.Component {    \n\n\tconstructor(props) {\n\t    super(props);\n\t    this.onClick = this.onClick.bind(this)\n\t}\n\n\tonClick(e,task){\n\t\tconsole.log(task)\n\t\tthis.props.taskChangeNameStart(task.name)\n\t}\n\n\trender(){\n\t\tlet task = this.props.task\n\t\treturn(\n\t\t\t<div \t\t                            \n\t\t        onDragStart={(e)=>this.props.onDragStart(e, task)}                    \n\t\t        draggable                    \n\t\t        className=\"draggable\">                       \n\t\t        <p onClick={(e)=>this.onClick(e, task)}>{task.name}</p>\n\t\t        <p>{task.description}</p>                \n\t\t    </div>\n\t\t)\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../App.css';\n\nexport class Task_Edit_Name extends React.Component {    \n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {value: ''};\n\t    this.handleChange = this.handleChange.bind(this)\n    \tthis.handleSubmit = this.handleSubmit.bind(this)\n\t}\n\n\thandleChange(event) {\n\t    this.setState({value: event.target.value});\n\t}\n\n\thandleSubmit(event,task) {\n\t    this.props.taskChangeName(this.state.value,task.name)\n\t    event.preventDefault();\n\t}\n\n\trender(){\n\t\tlet task = this.props.task\n\t\treturn(\n\t\t\t<div \t\t                            \n\t\t        onDragStart={(e)=>this.props.onDragStart(e, task)}                   \n\t\t        draggable                    \n\t\t        className=\"draggable\">\n\t\t        <form onSubmit={(e)=>this.handleSubmit(e,task)}>                       \n\t\t        <input type='text'value={this.state.value} onChange={this.handleChange}/>\n\t\t        </form>\n\t\t        <p>{task.description}</p>\n\t\t    </div>\n\t\t)\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../App.css';\n\nexport class Section extends React.Component {    \n\n\tconstructor(props) {\n\t    super(props);\n\t}\n\n\trender(){\n\t\tlet section = this.props.section\n\t\treturn(\n\t\t\t<div\n\t\t\t\tclassName=\"section\"\n        onDragOver={(e)=>this.props.onDragOver(e)}                    \n        onDrop={(e)=>{this.props.onDrop(e, section)}}>                    \n        <span className=\"task-header\">{section.name}</span>         \n        <div>                    \n        {section.list}\n        </div>                \n      </div> \n\t\t)\n\t}\n}","import React from 'react';\nimport './App.css';\nimport { Task } from './components/task'\nimport { Task_Edit_Name } from './components/task_edit_name'\nimport { Section } from './components/section'\n\nclass App extends React.Component {    \n  \n  constructor(props) {\n      super(props);\n      this.state = {        \n        tasks: [\n          {\n            name:\"Task 1\",\n            category:\"to_do\",\n            description:\"task description 1\",\n            edit:true\n          },           \n          {\n            name:\"Task 2\", \n            category:\"to_do\",\n            description:\"task description 2\",\n            edit:false\n          },    \n          {\n            name:\"Task 3\", \n            category:\"done\",\n            description:\"task description 3\",\n            edit:false\n\n          }          \n        ],\n        sections: {\n          'to_do':{\n            id:1,\n            name:\"To Do\",\n            list:[]\n          },\n          'done':{\n            id:2,\n            name:\"Done\",\n            list:[]\n          },\n        }        \n    }  \n    this.onDrop = this.onDrop.bind(this) \n    this.onDragOver = this.onDragOver.bind(this)  \n    this.onDragStart = this.onDragStart.bind(this)\n    this.taskChangeName = this.taskChangeName.bind(this)\n    this.taskChangeNameStart = this.taskChangeNameStart.bind(this)\n  }\n\n    taskChangeName(new_name,name){\n      let tasks = this.state.tasks\n      for (let task in tasks){\n        if(tasks[task].name == name){\n          tasks[task].name = new_name\n          tasks[task].edit = false\n        }\n      }\n      \n      this.setState({tasks: tasks},function () {\n        console.log(\"this.state\", this.state.sections)\n      }); \n    }\n\n    taskChangeNameStart(name){\n      console.log(\"entrou aqui\",name)\n      let tasks = this.state.tasks\n      for (let task in tasks){\n        if(tasks[task].name == name){\n          tasks[task].edit = true\n        }\n      }\n      \n      this.setState({tasks: tasks},function () {\n        console.log(\"this.state\", this.state.sections)\n      }); \n    }\n\n    onDragOver(ev){\n      ev.preventDefault();\n    }\n\n    onDragStart(ev, task){\n      ev.dataTransfer.setData(\"name\",task.name)\n    }\n\n    onDrop(ev, cat){    \n      console.log(\"ondrop\")\n      let name = ev.dataTransfer.getData(\"name\");\n      let sections = this.state.sections\n      console.log(sections)\n      for(let section in sections){\n        let i = 0\n        for(let task of sections[section].list){\n            console.log('task', task.key, name)\n          if(task){\n            if(task.key == name){\n              sections[cat].list.push(task)\n              var index = sections[section].list.indexOf(sections[section].list[i]);\n              if (index > -1) {\n                sections[section].list.splice(index, 1);\n              }\n            }\n          }\n          i++\n        }         \n      }\n      this.setState({sections: sections})   \n      ev.preventDefault();\n      ev.stopPropagation();     \n    }\n\n    onDropOut(ev){\n      let name = ev.dataTransfer.getData(\"name\");\n      let sections = this.state.sections\n      for(let section in sections){\n        let i = 0\n        for(let task of sections[section].list){\n          if(task){\n            if(task.key == name){\n              let number = Object.keys(sections).length+1\n              sections[`new${number}`]={\n                id:sections.Count+1,\n                name:`New${number}`,\n                list:[]\n              }\n              sections[`new${number}`].list.push(task)\n\n\n              var index = sections[section].list.indexOf(sections[section].list[i]);\n              if (index > -1) {\n                sections[section].list.splice(index, 1);\n              }\n            }\n          }\n          i++\n        }\n      }\n      this.setState({sections: sections})   \n      ev.preventDefault();\n      ev.stopPropagation(); \n    }\n\n    render () { \n      let sections = this.sections\n      this.state.tasks.forEach((t) => {  \n        if(t.edit){\n          sections[t.category].list.push(\n            <div key={t.name} >\n                <Task_Edit_Name task={t} onDragStart={this.onDragStart} taskChangeName={this.taskChangeName} />\n            </div>\n          );\n        }else{\n          sections[t.category].list.push(\n            <div key={t.name} >\n                <Task task={t} onDragStart={this.onDragStart} taskChangeNameStart={this.taskChangeNameStart} />\n            </div>\n          ); \n        }             \n              \n      });\n \n    let sections_list = []\n    for (let section in sections) {\n        sections_list.push(\n          <div key={sections[section].id} className=\"section-out\">\n            <Section section={sections[section]} onDragOver={this.onDragOver} onDrop={this.onDrop}/>\n          </div>\n      ); \n    }\n      return (\n        <div className=\"container-drag\">\n        <h2 className=\"header\">To do List</h2>  \n        <div style={{width:\"100%\",height:\"100%\"}}\n        onDragOver={(e)=>this.onDragOver(e)}\n        onDrop={(e)=>{this.onDropOut(e)}}>       \n          {sections_list}\n        </div>          \n      </div>);\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}